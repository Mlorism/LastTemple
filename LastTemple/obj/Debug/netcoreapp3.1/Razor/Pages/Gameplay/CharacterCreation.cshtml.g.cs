#pragma checksum "E:\Repos\LastTemple\LastTemple\Pages\Gameplay\CharacterCreation.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "05bff6b6f501340e351574bcb4cd57b65352a623"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(LastTemple.Pages.Gameplay.Pages_Gameplay_CharacterCreation), @"mvc.1.0.razor-page", @"/Pages/Gameplay/CharacterCreation.cshtml")]
namespace LastTemple.Pages.Gameplay
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Repos\LastTemple\LastTemple\Pages\_ViewImports.cshtml"
using LastTemple;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"05bff6b6f501340e351574bcb4cd57b65352a623", @"/Pages/Gameplay/CharacterCreation.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d3c18532471ce0cf9b00af6aaf5ff81b7c10d676", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Gameplay_CharacterCreation : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/img/hero.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("img-thumbnail-dark"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("padding: 0"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "05bff6b6f501340e351574bcb4cd57b65352a6234308", async() => {
                WriteLiteral("\r\n    <div class=\"text-center\">\r\n    <h3>Tworzenie bohatera</h3>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-3 offset-2 mt-4\">\r\n            <div class=\"fixedContainer\">\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "05bff6b6f501340e351574bcb4cd57b65352a6234790", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
            </div>
        </div>

        <div class=""col-6"">
            <div class=""text-center"">
                
                <label><b>Podaj imię:</b></label>
                <div class=""row"">
                    <div class=""col-6 offset-3"" data-tooltip=""Od 3 do 15 liter"" >
                        <input id=""heroName"" type=""text"" pattern=""[A-Za-z]{3,15}"" class=""form-control bg-secondary text-light""/>
                    </div>
                </div>
            </div>

            <div class=""row mt-3 p-2"">
                <div class=""col-6"">
                    <div class=""text-center"">
                        <label><b>Co jest twoją mocną stroną:</b></label>
                    </div>

                    <div class=""text-center btn-group-toggle"">
                        <label class=""btn btn-outline-info"">
                            <input type=""radio"" name=""selectedStrength"" checked onchange=""radioSelection(this)""/> Siła
                        </label>
                ");
                WriteLiteral(@"        <label class=""btn btn-outline-info"">
                            <input type=""radio"" name=""selectedStrength"" onchange=""radioSelection(this)""/> Wytrzymałość
                        </label>
                    </div>

                    <div class=""text-center  btn-group-toggle mt-2 mb-2"">
                        <label class=""btn btn-outline-info"">
                            <input type=""radio"" name=""selectedStrength"" onchange=""radioSelection(this)""/> Siła Woli
                        </label>
                        <label class=""btn btn-outline-info"">
                            <input type=""radio"" name=""selectedStrength"" onchange=""radioSelection(this)""/> Szybkość
                        </label>
                    </div>

                    <div class=""text-center  btn-group-toggle"">
                        <label class=""btn btn-outline-info"">
                            <input type=""radio"" name=""selectedStrength"" onchange=""radioSelection(this)""/> Zręczność
                    ");
                WriteLiteral(@"    </label>                        
                    </div>
                </div>

                <div class=""col-6"">
                    <div class=""text-center"">
                        <label><b>Co jest twoją słabą stroną:</b></label>
                    </div>

                    <div class=""text-center btn-group-toggle"">
                        <label class=""btn btn-outline-info"">
                            <input type=""radio"" name=""selectedWeakness"" onchange=""radioSelection(this)""/> Siła
                        </label>
                        <label class=""btn btn-outline-info"">
                            <input type=""radio"" name=""selectedWeakness"" onchange=""radioSelection(this)""/> Wytrzymałość
                        </label>
                    </div>

                    <div class=""text-center  btn-group-toggle  mt-2 mb-2"">
                        <label class=""btn btn-outline-info"">
                            <input type=""radio"" name=""selectedWeakness"" checked onchang");
                WriteLiteral(@"e=""radioSelection(this)""/> Siła Woli
                        </label>
                        <label class=""btn btn-outline-info"">
                            <input type=""radio"" name=""selectedWeakness"" onchange=""radioSelection(this)""/> Szybkość
                        </label>
                    </div>

                    <div class=""text-center  btn-group-toggle"">
                        <label class=""btn btn-outline-info"">
                            <input type=""radio"" name=""selectedWeakness"" onchange=""radioSelection(this)""/> Zręczność
                        </label>
                    </div>
                </div>
            </div>

            <div class=""row mt-3 p-2"">
                <div class=""col"">

                    <div class=""text-center"">
                        <label><b>Jaką broń preferujesz:</b></label>
                    </div>

                    <div class=""text-center btn-group-toggle"">
                        <label class=""btn btn-outline-info"">
        ");
                WriteLiteral(@"                    <input type=""radio"" name=""selectedWeapon"" data-tooltip=""Częściej atakuje i łatwiej trafić, ale mniejsze obrażenia"" onchange=""radioSelection(this)""/> Lekką
                        </label>
                        <label class=""btn btn-outline-info"">
                            <input type=""radio"" name=""selectedWeapon"" checked data-tooltip=""Przeciętna szansa na trafienie i obrażenia"" onchange=""radioSelection(this)""/> Zbalansowaną
                        </label>
                        <label class=""btn btn-outline-info"">
                            <input type=""radio"" name=""selectedWeapon"" data-tooltip=""Rzadziej atakuje i trudniej trafić, ale większe obrażenia"" onchange=""radioSelection(this)""/> Ciężką
                        </label>                       
                    </div>
                </div>
            </div>

            <div class=""text-center"">
                <button id=""saveBtn"" class=""btn btn-outline-success m-2""><b>Zapisz</b></button>
            </div>
");
                WriteLiteral("\r\n        </div>\r\n\r\n    </div>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script type=""text/javascript"">

    let heroName = document.getElementById(""heroName"");
    

    heroName.oninput = function () { saveBtnActive(); }

    setElements();
    setSelectedButtons();
    
    function setElements(){
        $(""#saveBtn"").attr(""disabled"", true);
    }

    function saveBtnActive() {
        if (heroName.value == """") {
            $(""#saveBtn"").attr(""disabled"", true);           
        }

        else if (heroName.checkValidity()) {
            $(""#saveBtn"").attr(""disabled"", false);            
        }
        else {
            $(""#saveBtn"").attr(""disabled"", true);
        }
    } // saveBtnActive()

    function setSelectedButtons() {
        let selectedStrength = document.getElementsByName(""selectedStrength"");
        let selectedWeakness = document.getElementsByName(""selectedWeakness"");
        let selectedWeapon = document.getElementsByName(""selectedWeapon"");

        for (i = 0; i < selectedStrength.length; i++) {
            if (sele");
            WriteLiteral(@"ctedStrength[i].checked) {
                if (selectedStrength[i].parentElement.classList.contains(""btn-outline-info"")) {
                    selectedStrength[i].parentElement.classList.remove(""btn-outline-info"");
                    selectedStrength[i].parentElement.classList.add(""btn-info"");
                }
            }
            else {
                if (selectedStrength[i].parentElement.classList.contains(""btn-info"")) {
                    selectedStrength[i].parentElement.classList.remove(""btn-info"");
                    selectedStrength[i].parentElement.classList.add(""btn-outline-info"");
                }
            }
        } // for selectedStrength

        for (i = 0; i < selectedWeakness.length; i++) {
            if (selectedWeakness[i].checked) {
                if (selectedWeakness[i].parentElement.classList.contains(""btn-outline-info"")) {
                    selectedWeakness[i].parentElement.classList.remove(""btn-outline-info"");
                    selectedWeakness[i].");
            WriteLiteral(@"parentElement.classList.add(""btn-info"");
                }
            }
            else {
                if (selectedWeakness[i].parentElement.classList.contains(""btn-info"")) {
                    selectedWeakness[i].parentElement.classList.remove(""btn-info"");
                    selectedWeakness[i].parentElement.classList.add(""btn-outline-info"");
                }
            }
        } // for selectedWeakness

        for (i = 0; i < selectedWeapon.length; i++) {
            if (selectedWeapon[i].checked) {
                if (selectedWeapon[i].parentElement.classList.contains(""btn-outline-info"")) {
                    selectedWeapon[i].parentElement.classList.remove(""btn-outline-info"");
                    selectedWeapon[i].parentElement.classList.add(""btn-info"");
                }
            }
            else {
                if (selectedWeapon[i].parentElement.classList.contains(""btn-info"")) {
                    selectedWeapon[i].parentElement.classList.remove(""btn-info"");
  ");
            WriteLiteral(@"                  selectedWeapon[i].parentElement.classList.add(""btn-outline-info"");
                }
            }
        } // for selectedWeapon
    } // setSelectedButtons()

    function radioSelection(element) {
        let buttons = document.getElementsByName(element.name);

        for (i = 0; i < buttons.length; i++) {
            if (buttons[i].checked) {
                if (buttons[i].parentElement.classList.contains(""btn-outline-info"")) {
                    buttons[i].parentElement.classList.remove(""btn-outline-info"");
                    buttons[i].parentElement.classList.add(""btn-info"");
                }   
            }       
            else {  
                if (buttons[i].parentElement.classList.contains(""btn-info"")) {
                    buttons[i].parentElement.classList.remove(""btn-info"");
                    buttons[i].parentElement.classList.add(""btn-outline-info"");
                }
            }
        } // for
    } // radioSelection()
    

    

<");
            WriteLiteral("/script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LastTemple.Pages.Gameplay.CharacterCreation> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<LastTemple.Pages.Gameplay.CharacterCreation> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<LastTemple.Pages.Gameplay.CharacterCreation>)PageContext?.ViewData;
        public LastTemple.Pages.Gameplay.CharacterCreation Model => ViewData.Model;
    }
}
#pragma warning restore 1591
